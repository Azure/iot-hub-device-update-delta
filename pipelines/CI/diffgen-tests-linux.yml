trigger:
  branches:
    include:
    - user/*
  paths:
    include:
    - src

variables:
- name: solution
  value: '$(Build.SourcesDirectory)/build/diff-generation.sln'
- name: platform
  value: 'x64'
- name: configuration
  value: 'Release'
- name: unittests_bin_dir
  value: $(Build.SourcesDirectory)/src/managed/DiffGen/tests/UnitTests/bin/$(platform)/$(configuration)/net6.0
- name: unittests_project
  value: $(Build.SourcesDirectory)/src/managed/DiffGen/tests/UnitTests/UnitTests.csproj
- name: archiveutilitytest_project
  value: $(Build.SourcesDirectory)/src/managed/DiffGen/tests/ArchiveUtilityTest/ArchiveUtilityTest.csproj
- name: nuget_files_dir
  value: $(Build.ArtifactStagingDirectory)/nuget_files
- template: ../templates/version-variables.yml

stages:
  - stage: BuildNativeCode
    jobs:
    - job: BuildLinuxNativeCodeRelease_x64
      displayName: 'Build Linux Native Code - x64-linux'
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - template: /pipelines/templates/all-native-linux.yml
          parameters:
            vcpkg_triplet: x64-linux

  - stage: BuildAndTestManagedCode
    jobs:
    - job: BuildAndTestManagedCode
      displayName: Build and Test Managed Code
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - task: UseDotNet@2
          displayName: 'Use .NET Standard sdk'
          inputs:
            packageType: sdk
            version: 6.x
            installationPath: $(Agent.ToolsDirectory)/dotnet

        - task: NuGetToolInstaller@1

        - task: NuGetCommand@2
          inputs:
            restoreSolution: '$(solution)'

        - task: NuGetAuthenticate@0
          inputs:
            forceReinstallCredentialProvider: true

        - task: DotNetCoreCLI@2
          inputs:
            command: 'build'
            projects: '$(solution)'
            arguments: '--configuration $(configuration)'

        - task: DownloadPipelineArtifact@2
          displayName: 'Download x64-linux lib'
          inputs:
            artifactName: 'lib-drop.Release.x64-linux'
            targetPath: $(nuget_files_dir)

        - task: DownloadPipelineArtifact@2
          displayName: 'Download x64-linux tools'
          inputs:
            artifactName: 'tools-drop.Release.x64-linux'
            targetPath: $(nuget_files_dir)

        - bash: |
            mkdir -p $(unittests_bin_dir)
            cp $(nuget_files_dir)/* $(unittests_bin_dir)
            echo "Unit Test Folder: $(unittests_bin_dir)"
            chmod +x $(unittests_bin_dir)/dumpextfs
            chmod +x $(unittests_bin_dir)/bsdiff
            chmod +x $(unittests_bin_dir)/bspatch
            chmod +x $(unittests_bin_dir)/zstd_compress_file
          displayName: 'Copy Nuget Files to UnitTests'

        - task: DotNetCoreCLI@2
          inputs:
            command: 'test'
            projects: '$(unittests_project)'
            arguments: '--configuration $(configuration)'

        - task: DotNetCoreCLI@2
          inputs:
            command: 'test'
            projects: '$(archiveutilitytest_project)'
            arguments: '--configuration $(configuration)'
