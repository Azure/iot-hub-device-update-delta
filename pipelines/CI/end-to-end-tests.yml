trigger:
  branches:
    include:
    - user/*
  paths:
    include:
    - src

schedules:
- cron: "0 8 * * *"
  displayName: Midnight Build
  branches:
    include:
    - main
    - dev
  always: true

variables:
- template: /pipelines/variables/version-variables.yml@self
- template: /pipelines/variables/diffgen-variables.yml@self
- template: /pipelines/variables/common-variables.yml@self

stages:
  # We require heterogenous environments for these jobs, so they
  # are in a stage where we parallelize them and then publish
  - stage: BuildNativeCode
    jobs:
    - job: BuildWindowsNativeCode_x64_windows_Release
      displayName: 'Build Windows Native Code - x64-windows (Release)'
      pool:
        vmImage: 'windows-latest'
      steps:
        - template: /pipelines/templates/build-native.yml@self
          parameters:
            build_target_os: windows
            version_suffix: '-CI'

    - job: BuildLinuxNativeCodeRelease_x64
      displayName: 'Build Linux Native Code - x64-linux'
      pool:
        vmImage: 'ubuntu-20.04'
      steps:
        - template: /pipelines/templates/build-native.yml@self
          parameters:
            build_target_os: linux
            version_suffix: '-CI'

  - stage: BuildManagedCodeAndPublish
    jobs:
    - job: BuildManagedCodeAndPublish
      pool:
        vmImage: 'windows-latest'
      steps:
        - template: /pipelines/templates/build-nuget.yml@self

  - stage: EndToEndTests
    jobs:
    - job: EndToEndTestsWindows
      pool:
        vmImage: 'windows-latest'
      steps:
        - template: /pipelines/templates/extract-nuget-files.yml@self
          parameters:
            nuget_files_extract_dir: $(Pipeline.Workspace)/drop/nuget/expanded
        - template: /pipelines/templates/run-end-to-end-tests.yml@self
          parameters:
            nuget_files_dir: $(Pipeline.Workspace)/drop/nuget/expanded

    - job: EndToEndTestsUbuntuLatest
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - template: /pipelines/templates/extract-nuget-files.yml@self
          parameters:
            nuget_files_extract_dir: $(Pipeline.Workspace)/drop/nuget/expanded
        - template: /pipelines/templates/download-package.yml@self
          parameters:
            package_dir: $(Pipeline.Workspace)/drop/package
        - template: /pipelines/templates/run-end-to-end-tests.yml@self
          parameters:
            nuget_files_dir: $(Pipeline.Workspace)/drop/nuget/expanded
            package_dir: $(Pipeline.Workspace)/drop/package

    - job: EndToEndTestsUbuntu2004
      pool:
        vmImage: 'ubuntu-20.04'
      steps:
        - template: /pipelines/templates/extract-nuget-files.yml@self
          parameters:
            nuget_files_extract_dir: $(Pipeline.Workspace)/drop/nuget/expanded
        - template: /pipelines/templates/download-package.yml@self
          parameters:
            package_dir: $(Pipeline.Workspace)/drop/package
        - template: /pipelines/templates/run-end-to-end-tests.yml@self
          parameters:
            nuget_files_dir: $(Pipeline.Workspace)/drop/nuget/expanded
            package_dir: $(Pipeline.Workspace)/drop/package
