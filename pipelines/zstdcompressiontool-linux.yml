trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  buildPlatform: 'x64'
  vcpkg_dir: $(Agent.BuildDirectory)/VCPKG
  zstd_compress_file_build_dir: $(Agent.BuildDirectory)/zstd_compress_file-build
  python_test_dir: $(Build.SourcesDirectory)/src/scripts/recompress_swu/tests
  cmakeToolchainFile: $(vcpkg_dir)/scripts/buildsystems/vcpkg.cmake
  vcpkg_triplet: $(buildPlatform)-linux

steps:
- bash: |
    sudo apt-get install -y g++-9
    sudo apt-get install -y g++
    sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 10
    sudo apt-get install -y pkg-config libmhash-dev cmake curl zip unzip tar autoconf autopoint libtool python3 python3-pip
    pip3 install libconf zstandard
  displayName: 'Install Dependencies'

- bash: |
    cat $(Build.Repository.LocalPath)/build/setup_vcpkg.sh
  displayName: 'Dump setup_vcpkg.sh'

- bash: |
    chmod +x $(Build.Repository.LocalPath)/build/setup_vcpkg.sh
    $(Build.Repository.LocalPath)/build/setup_vcpkg.sh $(vcpkg_dir) $(Build.Repository.LocalPath)/vcpkg/ports $(vcpkg_triplet)
  displayName: 'Setup VCPKG'
  env:
    VCPKG_ROOT: $(vcpkg_dir)

- task: CMake@1
  inputs:
    cmakeArgs: -S $(Build.SourcesDirectory)/src -B $(zstd_compress_file_build_dir) -DCMAKE_TOOLCHAIN_FILE=$(cmakeToolchainFile)
  env:
    VCPKG_ROOT: $(vcpkg_dir)

- bash: |
    cd $(zstd_compress_file_build_dir)
    make
  displayName: 'Make zstd_compress_file'
  env:
    VCPKG_ROOT: $(vcpkg_dir)

- bash: |
    ls -R $(zstd_compress_file_build_dir)
  displayName: 'Show zstd_compress_file build contents'

- bash: |
    cd $(python_test_dir)
    python3 test_integration.py --zstd_compress_file $(zstd_compress_file_build_dir)/tools/zstd_compress_file/zstd_compress_file
  displayName: 'Run tests'
