# File: publish-diffapi-linux.yml
# This template implements testing the diff api on linux systems.
parameters:
- name: tools_publish_dir
  type: string
  default: $(Build.ArtifactStagingDirectory)/tools
- name: licenses_publish_dir
  type: string
  default: $(Build.ArtifactStagingDirectory)/licenses
- name: vcpkg_dir
  type: string
- name: vcpkg_triplet
  type: string
- name: configuration
  type: string
  default: Release
- name: applydiff_tool_full_path
  type: string
- name: dumpdiff_tool_full_path
  type: string
- name: dumpextfs_tool_full_path
  type: string
- name: zstd_compress_file_binary
  type: string
- name: lib_publish_dir
  type: string
- name: libadudiffapi_full_path
  type: string
- name: package_location_dir
  type: string
- name: package_publish_dir
  type: string

steps:
- bash: |
    mkdir -p ${{ parameters.tools_publish_dir }}
    cp ${{ parameters.applydiff_tool_full_path }} ${{ parameters.tools_publish_dir }}
    cp ${{ parameters.dumpdiff_tool_full_path }} ${{ parameters.tools_publish_dir }}
    cp ${{ parameters.dumpextfs_tool_full_path }} ${{ parameters.tools_publish_dir }}
    cp ${{ parameters.zstd_compress_file_binary }} ${{ parameters.tools_publish_dir }}
    cp ${{ parameters.vcpkg_dir }}/packages/bsdiff_${{ parameters.vcpkg_triplet }}/bin/bsdiff_diff ${{ parameters.tools_publish_dir }}/bsdiff
    cp ${{ parameters.vcpkg_dir }}/packages/bsdiff_${{ parameters.vcpkg_triplet }}/bin/bsdiff_patch ${{ parameters.tools_publish_dir }}/bspatch
  displayName: 'Copy tools to staging directory.'

- bash: |
    mkdir -p ${{ parameters.licenses_publish_dir }}
    cp ${{ parameters.vcpkg_dir }}/packages/e2fsprogs_${{ parameters.vcpkg_triplet }}/share/e2fsprogs/copyright ${{ parameters.licenses_publish_dir }}/LICENSE.e2fsprogs
    cp ${{ parameters.vcpkg_dir }}/packages/bsdiff_${{ parameters.vcpkg_triplet }}/share/bsdiff/copyright ${{ parameters.licenses_publish_dir }}/LICENSE.bsdiff
    cp ${{ parameters.vcpkg_dir }}/packages/zlib_${{ parameters.vcpkg_triplet }}/share/zlib/copyright ${{ parameters.licenses_publish_dir }}/LICENSE.zlib
    cp ${{ parameters.vcpkg_dir }}/packages/zstd_${{ parameters.vcpkg_triplet }}/share/zstd/LICENSE ${{ parameters.licenses_publish_dir }}/LICENSE.zstd
    cp ${{ parameters.vcpkg_dir }}/packages/bzip2_${{ parameters.vcpkg_triplet }}/share/bzip2/copyright ${{ parameters.licenses_publish_dir }}/LICENSE.bzip2
    cp ${{ parameters.vcpkg_dir }}/packages/ms-gsl_${{ parameters.vcpkg_triplet }}/share/ms-gsl/copyright ${{ parameters.licenses_publish_dir }}/LICENSE.ms-gsl
    cp ${{ parameters.vcpkg_dir }}/packages/libgcrypt_${{ parameters.vcpkg_triplet }}/share/libgcrypt/copyright ${{ parameters.licenses_publish_dir }}/LICENSE.libgcrypt
    cp ${{ parameters.vcpkg_dir }}/packages/libgpg-error_${{ parameters.vcpkg_triplet }}/share/libgpg-error/copyright ${{ parameters.licenses_publish_dir }}/LICENSE.libgpg-error
    
    ls ${{ parameters.licenses_publish_dir }}
  displayName: 'Copy licenses to staging directory.'

- bash: |
    mkdir -p ${{ parameters.lib_publish_dir }}
    cp ${{ parameters.libadudiffapi_full_path }} ${{ parameters.lib_publish_dir }}
  displayName: 'Copy libs to staging directory.'

- bash: |
    mkdir -p ${{ parameters.package_publish_dir }}
    cp ${{ parameters.package_location_dir }}/*.deb ${{ parameters.package_publish_dir }}
  displayName: 'Copy packages to staging directory'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '${{ parameters.tools_publish_dir }}'
    artifactType: 'pipeline'
    artifactName: 'tools-drop.${{ parameters.configuration }}.${{ parameters.vcpkg_triplet }}'
  displayName: 'Publish tools artifact'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '${{ parameters.lib_publish_dir }}'
    artifactType: 'pipeline'
    artifactName: 'lib-drop.${{ parameters.configuration }}.${{ parameters.vcpkg_triplet }}'
  displayName: 'Publish lib artifact'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '${{ parameters.package_publish_dir }}'
    artifactType: 'pipeline'
    artifactName: 'package-drop.${{ parameters.configuration }}.${{ parameters.vcpkg_triplet }}'
  displayName: 'Publish package artifact'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '${{ parameters.licenses_publish_dir }}'
    artifactType: 'pipeline'
    artifactName: 'licenses3rdParty-drop'
  displayName: 'Publish 3rd Party licenses artifact'

