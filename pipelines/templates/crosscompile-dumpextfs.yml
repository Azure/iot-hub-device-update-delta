# File: diffapi-linux-template.yml
# This template uses multiple other templates to build,
# test and publish the content for the diffapi project.
parameters:
# Build Parameters
- name: dependencies
  type: string
  default: g++ g++-9 g++-mingw-w64-i686 g++-mingw-w64-x86-64 g++-mingw-w64 mingw-w64-common mingw-w64-i686-dev mingw-w64-x86-64-dev mingw-w64 binutils-mingw-w64-x86-64 gcc-mingw-w64-base mingw-w64-tools cross-config
- name: vcpkg_dir
  type: string
  default: $(Agent.BuildDirectory)/vcpkg
- name: diffapi_build_dir
  type: string
  default: $(Build.SourcesDirectory)/src/diffapi-build
- name: dumpextfs_src_dir
  type: string
  default: $(Build.SourcesDirectory)/src/tools/dumpextfs
- name: cmake_c_compiler
  type: string
  default: x86_64-w64-mingw32-gcc
- name: cmake_cxx_compiler
  type: string
  default: x86_64-w64-mingw32-g++
# Publish Parameters
- name: dumpextfs_tool_full_path
  type: string
  default: $(Build.SourcesDirectory)/src/diffapi-build/tools/dumpextfs/dumpextfs.exe
- name: platform
  type: string
  default: 'x64'
- name: target_os
  type: string
  default: windows

steps:
- template: build-native-linux.yml
  parameters:
    dependencies: ${{ parameters.dependencies }}
    setup_vcpkg_script: $(Build.Repository.LocalPath)/build/setup_vcpkg.sh
    vcpkg_dir: ${{ parameters.vcpkg_dir }}
    vcpkg_ports: $(Build.SourcesDirectory)/vcpkg/ports
    vcpkg_triplet: x64-mingw-static
    source_location: $(Build.SourcesDirectory)/src
    build_location: ${{ parameters.diffapi_build_dir }}
    cmake_c_compiler: ${{ parameters.cmake_c_compiler }}
    cmake_cxx_compiler: ${{ parameters.cmake_cxx_compiler }}

- bash: |
    chmod +x $(Build.SourcesDirectory)/build/crosscompile_dumpextfs.sh
    $(Build.SourcesDirectory)/build/crosscompile_dumpextfs.sh ${{ parameters.dumpextfs_src_dir }} ${{ parameters.diffapi_build_dir }} ${{ parameters.vcpkg_dir }} ${{ parameters.dumpextfs_tool_full_path }}
  displayName: 'Build dumpextfs'
  env:
    VCPKG_ROOT: ${{ parameters.vcpkg_dir }}

- bash: |
    mkdir -p $(Build.ArtifactStagingDirectory)/drop
    cp ${{ parameters. dumpextfs_tool_full_path }} $(Build.ArtifactStagingDirectory)/drop
  displayName: 'Copy dumpextfs to drop'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/drop'
    artifactType: 'pipeline'
    artifactName: 'unsigned-dumpextfs-drop.Release.${{ parameters.platform }}-${{ parameters.target_os }}'
