# File: build-diffapi-windows-template.yml
parameters:
- name: solution
  type: string
  default: '$(Build.SourcesDirectory)/build/diff-generation.sln'
- name: enable_signing
  type: boolean
  default: true
- name: diffgen_project
  type: string
  default: $(Build.SourcesDirectory)\src\managed\DiffGen\DiffGeneration\DiffGeneration.csproj
- name: diffgen_tool_project
  type: string
  default: $(Build.SourcesDirectory)\src\managed\DiffGen\tools\DiffGenTool\DiffGenTool.csproj
- name: platform
  type: string
  default: 'x64'
- name: configuration
  type: string
  default: 'Release'
- name: build_nuget
  type: boolean
  default: true
- name: nuget_files_dir
  type: string
  default: $(Build.ArtifactStagingDirectory)/nuget_files
- name: ERRORS_md_file
  type: string
  default: $(Build.SourcesDirectory)/src/managed/DiffGen/DiffGeneration/ERRORS.md
- name: unittests_bin_dir
  type: string
  default: $(Build.SourcesDirectory)\src\managed\DiffGen\tests\UnitTests\bin
- name: archiveutilitytest_bin_dir
  type: string
  default: $(Build.SourcesDirectory)\src\managed\DiffGen\tests\ArchiveUtilityTest\bin
- name: tests_samples_dir
  type: string
  default: $(Build.SourcesDirectory)\src\managed\DiffGen\tests\samples
- name: notice_txt_file
  type: string
  default: $(Build.SourcesDirectory)\notice\NOTICE.txt
- name: license_file
  type: string
  default: $(Build.SourcesDirectory)\LICENSE

steps:
- template: show-version-variables.yml

- task: UseDotNet@2
  displayName: 'Use .NET Standard sdk'
  inputs:
    packageType: sdk
    version: 6.x
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '${{ parameters.solution }}'

- task: VSBuild@1
  inputs:
    solution: '${{ parameters.solution }}'
    platform: '${{ parameters.platform }}'
    configuration: '${{ parameters.configuration }}'
    msbuildArgs: >-
      /p:FileVersion="$(semver_version)"
      /p:InformationalVersion="$(informational_version)"
      /p:AssemblyVersion="$(semver_version)"
      /p:Version="$(semver_version)"
      /p:Copyright="$(copyright)"

- task: PowerShell@2
  displayName: 'Show DLL Version for built files'
  inputs:
    filePath: $(Build.SourcesDirectory)/build/dump-dll-versions.ps1
    arguments: $(Build.SourcesDirectory)/src/managed

- task: DownloadPipelineArtifact@2
  displayName: 'Download Microsoft x64-windows binaries'
  condition: ${{ parameters.enable_signing }}
  inputs:
    artifactName: 'signed-Microsoft-binaries-drop.Release.x64-windows'
    targetPath: ${{ parameters.nuget_files_dir }}

- task: DownloadPipelineArtifact@2
  displayName: 'Download 3rd Party x64-windows binaries'
  condition: ${{ parameters.enable_signing }}
  inputs:
    artifactName: 'signed-3rdParty-binaries-drop.Release.x64-windows'
    targetPath: ${{ parameters.nuget_files_dir }}

- task: DownloadPipelineArtifact@2
  displayName: 'Download unsigned x64-windows binaries'
  condition: not(${{ parameters.enable_signing }})
  inputs:
    artifactName: 'unsigned-binaries-drop.Release.x64-windows'
    targetPath: ${{ parameters.nuget_files_dir }}

- task: DownloadPipelineArtifact@2
  displayName: 'Download unsigned x64-windows dumpextfs'
  condition: not(${{ parameters.enable_signing }})
  inputs:
    artifactName: 'unsigned-dumpextfs-drop.Release.x64-windows'
    targetPath: ${{ parameters.nuget_files_dir }}

- task: DownloadPipelineArtifact@2
  displayName: 'Download x64-linux lib'
  inputs:
    artifactName: 'lib-drop.Release.x64-linux'
    targetPath: ${{ parameters.nuget_files_dir }}

- task: DownloadPipelineArtifact@2
  displayName: 'Download x64-linux tools'
  inputs:
    artifactName: 'tools-drop.Release.x64-linux'
    targetPath: ${{ parameters.nuget_files_dir }}

- task: DownloadPipelineArtifact@2
  displayName: 'Download x64-linux debian package'
  inputs:
    artifactName: 'package-drop.Release.x64-linux'
    targetPath: ${{ parameters.nuget_files_dir }}

- pwsh: |
    copy ${{ parameters.ERRORS_md_file }} ${{ parameters.nuget_files_dir }}
    copy ${{ parameters.notice_txt_file }} ${{ parameters.nuget_files_dir }}
    copy ${{ parameters.license_file }} ${{ parameters.nuget_files_dir }}

- pwsh: dir ${{ parameters.nuget_files_dir }} -s
  displayName: 'Show Diffgen Nuget files'

- pwsh: copy ${{ parameters.nuget_files_dir }}\* ${{ parameters.unittests_bin_dir }}\${{ parameters.configuration }}\net6.0
  displayName: 'Copy Nuget Files to UnitTests'

- pwsh: dir ${{ parameters.unittests_bin_dir }}\${{ parameters.configuration }}\net6.0 -s
  displayName: 'Show Unit Test files'

- pwsh: dir ${{ parameters.tests_samples_dir }} -s
  displayName: 'Show sample files'

- pwsh: dir ${{ parameters.archiveutilitytest_bin_dir }}\${{ parameters.configuration }}\net6.0 -s
  displayName: 'Show archive utility test files'

- task: VSTest@2
  inputs:
    platform: '${{ parameters.platform }}'
    configuration: '${{ parameters.configuration }}'
    testAssemblyVer2: |
        ${{ parameters.unittests_bin_dir }}\${{ parameters.configuration }}\net6.0\UnitTests.dll
        ${{ parameters.archiveutilitytest_bin_dir }}\${{ parameters.configuration }}\net6.0\ArchiveUtilityTest.dll

- task: NuGetAuthenticate@0
  inputs:
    forceReinstallCredentialProvider: true

- task: PowerShell@2
  displayName: 'Create Windows DiffGenTool drop'
  inputs:
    targetType: inline
    script: |
      dotnet publish ${{ parameters.diffgen_tool_project }} --configuration ${{ parameters.configuration }} --framework net6.0 --runtime win-x64 --self-contained false /p:FileVersion="$(semver_version)" /p:InformationalVersion="$(informational_version)" /p:AssemblyVersion="$(semver_version)" /p:Version="$(semver_version)" /p:Copyright="$(copyright)"
      ls $(Build.SourcesDirectory)\src\managed\DiffGen\tools\DiffGenTool\ -R
      mkdir $(Build.ArtifactStagingDirectory)\x64-windows
      copy $(Build.SourcesDirectory)\src\managed\DiffGen\tools\DiffGenTool\bin\${{ parameters.configuration }}\net6.0\win-x64\* $(Build.ArtifactStagingDirectory)\x64-windows
      copy ${{ parameters.nuget_files_dir }}\adudiffapi.dll $(Build.ArtifactStagingDirectory)\x64-windows
      copy ${{ parameters.nuget_files_dir }}\applydiff.exe $(Build.ArtifactStagingDirectory)\x64-windows
      copy ${{ parameters.nuget_files_dir }}\dumpdiff.exe $(Build.ArtifactStagingDirectory)\x64-windows
      copy ${{ parameters.nuget_files_dir }}\dumpextfs.exe $(Build.ArtifactStagingDirectory)\x64-windows
      copy ${{ parameters.nuget_files_dir }}\zstd_compress_file.exe $(Build.ArtifactStagingDirectory)\x64-windows
      copy ${{ parameters.nuget_files_dir }}\bsdiff.dll $(Build.ArtifactStagingDirectory)\x64-windows
      copy ${{ parameters.nuget_files_dir }}\bsdiff.exe $(Build.ArtifactStagingDirectory)\x64-windows
      copy ${{ parameters.nuget_files_dir }}\bspatch.exe $(Build.ArtifactStagingDirectory)\x64-windows
      copy ${{ parameters.nuget_files_dir }}\bz2.dll $(Build.ArtifactStagingDirectory)\x64-windows
      copy ${{ parameters.nuget_files_dir }}\zlib1.dll $(Build.ArtifactStagingDirectory)\x64-windows
      copy ${{ parameters.nuget_files_dir }}\zstd.dll $(Build.ArtifactStagingDirectory)\x64-windows
      copy ${{ parameters.notice_txt_file }} $(Build.ArtifactStagingDirectory)\x64-windows
      copy ${{ parameters.license_file }} $(Build.ArtifactStagingDirectory)\x64-windows

- task: PublishPipelineArtifact@1
  displayName: Publish x64-windows drop.
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)\x64-windows'
    artifactType: 'pipeline'
    artifactName: 'diffgen-tool.Release.x64-windows'

- task: NuGetAuthenticate@0
  inputs:
    forceReinstallCredentialProvider: true

- task: PowerShell@2
  displayName: 'Create Linux DiffGenTool drop'
  inputs:
    targetType: inline
    script: |
      dotnet publish ${{ parameters.diffgen_tool_project }} --configuration ${{ parameters.configuration }} --framework net6.0 --runtime linux-x64 --self-contained false /p:FileVersion="$(semver_version)" /p:InformationalVersion="$(informational_version)" /p:AssemblyVersion="$(semver_version)" /p:Version="$(semver_version)" /p:Copyright="$(copyright)"
      ls $(Build.SourcesDirectory)\src\managed\DiffGen\tools\DiffGenTool\ -R
      mkdir $(Build.ArtifactStagingDirectory)\x64-linux
      copy $(Build.SourcesDirectory)\src\managed\DiffGen\tools\DiffGenTool\bin\${{ parameters.configuration }}\net6.0\linux-x64\* $(Build.ArtifactStagingDirectory)\x64-linux
      copy ${{ parameters.nuget_files_dir }}\bsdiff $(Build.ArtifactStagingDirectory)\x64-linux
      copy ${{ parameters.nuget_files_dir }}\bspatch $(Build.ArtifactStagingDirectory)\x64-linux
      copy ${{ parameters.nuget_files_dir }}\zstd_compress_file $(Build.ArtifactStagingDirectory)\x64-linux
      copy ${{ parameters.nuget_files_dir }}\applydiff $(Build.ArtifactStagingDirectory)\x64-linux
      copy ${{ parameters.nuget_files_dir }}\dumpdiff $(Build.ArtifactStagingDirectory)\x64-linux
      copy ${{ parameters.nuget_files_dir }}\dumpextfs $(Build.ArtifactStagingDirectory)\x64-linux
      copy ${{ parameters.nuget_files_dir }}\libadudiffapi.so $(Build.ArtifactStagingDirectory)\x64-linux
      copy ${{ parameters.notice_txt_file }} $(Build.ArtifactStagingDirectory)\x64-linux
      copy ${{ parameters.license_file }} $(Build.ArtifactStagingDirectory)\x64-linux
      copy ${{ parameters.nuget_files_dir }}\*.deb $(Build.ArtifactStagingDirectory)\x64-linux

- task: PowerShell@2
  displayName: 'Show DLL Version for DiffGenTool folder'
  inputs:
    filePath: $(Build.SourcesDirectory)/build/dump-dll-versions.ps1
    arguments: $(Build.SourcesDirectory)\src\managed\DiffGen\tools\DiffGenTool

- task: PowerShell@2
  displayName: 'Copy Windows DiffGenTool drop to nuget.'
  inputs:
    targetType: inline
    script: |
      mkdir '${{ parameters.nuget_files_dir }}\bin\DiffGenTool\x64-windows'
      copy $(Build.ArtifactStagingDirectory)\x64-windows\* '${{ parameters.nuget_files_dir }}\bin\DiffGenTool\x64-windows'

- task: PowerShell@2
  displayName: 'Copy Linux DiffGenTool drop to nuget.'
  inputs:
    targetType: inline
    script: |
      mkdir '${{ parameters.nuget_files_dir }}\bin\DiffGenTool\x64-linux'
      copy $(Build.ArtifactStagingDirectory)\x64-linux\* '${{ parameters.nuget_files_dir }}\bin\DiffGenTool\x64-linux'

- task: NuGetCommand@2
  condition: ${{ parameters.build_nuget }}
  inputs:
    command: 'custom'
    arguments: >-
        pack ${{ parameters.diffgen_project }}
        -NonInteractive
        -OutputDirectory $(Build.ArtifactStagingDirectory)\nuget-build
        -BasePath ${{ parameters.nuget_files_dir }}
        -Version $(semver_version)
        -IncludeReferencedProjects
        -Verbosity Detailed
        -Properties Version="$(semver_version)"
        -Properties FileVersion="$(semver_version)"
        -Properties InformationalVersion="$(informational_version)"
        -Properties AssemblyVersion="$(semver_version)"
        -Properties Configuration=${{ parameters.configuration }}

- task: EsrpCodeSigning@1
  condition: and(${{ parameters.enable_signing }}, ${{ parameters.build_nuget }})
  inputs:
    ConnectedServiceName: 'ADU Diffs ESRP CodeSigning'
    FolderPath: '$(Build.ArtifactStagingDirectory)\nuget-build'
    Pattern: '*.nupkg'
    signConfigType: 'inlineSignParams'
    inlineOperation: |
      [
        {
            "KeyCode" : "CP-401405",
            "OperationCode" : "NuGetSign",
            "Parameters" : {},
            "ToolName" : "sign",
            "ToolVersion" : "1.0"
        },
        {
            "KeyCode" : "CP-401405",
            "OperationCode" : "NuGetVerify",
            "Parameters" : {},
            "ToolName" : "sign",
            "ToolVersion" : "1.0"
        }
      ]
    SessionTimeout: '60'
    MaxConcurrency: '50'
    MaxRetryAttempts: '5'
    Region: 'PuertoRico'

- task: PowerShell@2
  displayName: 'Copy nuget to final staging location'
  condition: ${{ parameters.build_nuget }}
  inputs:
    targetType: inline
    script: |
      mkdir $(Build.ArtifactStagingDirectory)\nuget
      copy $(Build.ArtifactStagingDirectory)\nuget-build\*.nupkg $(Build.ArtifactStagingDirectory)\nuget

- task: PublishPipelineArtifact@1
  displayName: Publish nuget.
  condition: ${{ parameters.build_nuget }}
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)\nuget'
    artifactType: 'pipeline'
    artifactName: 'nuget'

- task: PublishPipelineArtifact@1
  displayName: Publish x64-linux drop.
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)\x64-linux'
    artifactType: 'pipeline'
    artifactName: 'diffgen-tool.Release.x64-linux'
