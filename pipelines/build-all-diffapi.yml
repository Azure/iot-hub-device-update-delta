schedules:
- cron: "0 8 * * *"
  displayName: Midnight Build
  branches:
    include:
    - main
    - dev
  always: true

variables:
- template: /pipelines/variables/common-variables.yml@self
- template: /pipelines/variables/arm-linux-variables.yml@self
- template: /pipelines/variables/arm64-linux-variables.yml@self

stages:
  # We require heterogenous environments for these jobs, so they
  # are in a stage where we parallelize them and then publish
  - stage: BuildNativeCode
    jobs:
    - job: BuildWindowsNativeCode_x64_windows_Release
      displayName: 'Build Windows Native Code - x64-windows (Release)'
      pool:
        vmImage: 'windows-latest'
      steps:
        - template: /pipelines/templates/build-native.yml@self
          parameters:
            build_target_os: windows
            build_configuration: 'Release'
            version_suffix: '-Release'

    - job: BuildWindowsNativeCode_x64_windows_Debug
      displayName: 'Build Windows Native Code - x64-windows (Debug)'
      pool:
        vmImage: 'windows-latest'
      steps:
        - template: /pipelines/templates/build-native.yml@self
          parameters:
            build_target_os: windows
            build_configuration: 'Debug'
            version_suffix: '-Debug'

    - job: BuildLinuxNativeCodeRelease_x64
      displayName: 'Build Linux Native Code - x64-linux'
      pool:
        vmImage: 'ubuntu-20.04'
      steps:
        - template: /pipelines/templates/build-native.yml@self
          parameters:
            build_target_os: linux
            build_platform: x64
            version_suffix: '-Release'

    - job: BuildLinuxNativeCodeRelease_arm64
      displayName: 'Build Linux Native Code - arm64-linux'
      pool:
        vmImage: 'ubuntu-20.04'
      steps:
        - template: /pipelines/templates/build-native.yml@self
          parameters:
            build_target_os: linux
            build_platform: arm64
            version_suffix: '-Release'
            cmake_c_compiler: $(arm64_linux_cmake_c_compiler)
            cmake_cxx_compiler: $(arm64_linux_cmake_cxx_compiler)
            dependencies: $(arm64_linux_dependencies)
            qemu_command: $(arm64_linux_qemu_command)

    - job: BuildLinuxNativeCodeRelease_arm
      displayName: 'Build Linux Native Code - arm-linux'
      pool:
        vmImage: 'ubuntu-20.04'
      steps:
        - template: /pipelines/templates/build-native.yml@self
          parameters:
            build_target_os: linux
            build_platform: arm
            version_suffix: '-Release'
            cmake_c_compiler: $(arm_linux_cmake_c_compiler)
            cmake_cxx_compiler: $(arm_linux_cmake_cxx_compiler)
            dependencies: $(arm_linux_dependencies)
            qemu_command: $(arm_linux_qemu_command)
